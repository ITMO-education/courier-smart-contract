#include "imports/stdlib.fc";
;; 0-32 -
(int) load_data() inline {
    var ds = get_data().begin_parse(); ;; загрузка данных из ячейки и преобразование в нужный формат
    return (ds~load_uint(64)); ;; чтение 64 бит и возвращение в качестве результата
}

() save_data(int counter) impure inline {
    set_data(begin_cell() ;; сохранение данных в ячейке/создание конструктора ячейки
    .store_uint(counter, 64) ;; запись числа в первые 64 бита ячейки
    .end_cell()); ;; преобразование в формат ячейки
}

() recv_internal(int msg_value, cell in_msg, slice in_msg_body) impure {
    if (in_msg_body.slice_empty?()) { ;;проверка входящего сообщения на пустоту
        return (); ;; выход из функции без ошибки
    }
    int op = in_msg_body~load_uint(32); ;;извлечение типа операции закодированного в первых 32 битах сообщения
    var (counter) = load_data(); ;; вызов утилитарной функции загрузки данных
    if (op == 1) { ;; если тип операции == 1 => выполняется сохранение
        save_data(counter + 1); ;; вызов утилитарной функции сохранения данных
    }
}

;; Создание контракта на доставку
() create_contract() {

}
;; Принятие контракта на доставку
() accept_contract() {

}

;; Подтверждение факта доставки
() commit_contract() {

}
